Определи тип запроса и принципал. Вот код запроса в hex: 3081e0a081c70481c4000000c06a81bd3081baa103020105a20302010aa31a3018300aa10402020096a2020400300aa10402020095a2020400a4819130818ea00703050040010010a1133011a003020101a10a30081b066c79616e6f76a2141b12455352542e434c4f55442e534252462e5255a3273025a003020102a11e301c1b066b72627467741b12455352542e434c4f55442e534252462e5255a511180f32303235303232323036323830385aa7060204346edc96a814301202011402011302011202011102011a020119a1141b12455352542e434c4f55442e534252462e5255

Напиши код на java, если будешь использовать bouncycastle то только 1.70. Java 17. И протестируй его в своей среде множество раз. Если он не работает как нужно, не верно определяет тип запроса и принципал, то исправляй и дорабатывай его столько сколько нужно, пока не добьёшься 100% корректного результата. Покажи окончательный рабочий код и реальный фактический результат его выполнения. Должно быть полное совпадение между тем что ты мне аокажешь в качестве результата работы кода и тем что я получу в результате работы этого кода. Он должен запуститься с первого раза и быть идеальным.




server:
  port: 8080
  servlet:
    context-path: /KdcProxy

kdcproxy:
  servers:
    - host: "kdc1.example.com"
      port: 88
      protocol: "UDP"
    - host: "kdc2.example.com"
      port: 88
      protocol: "TCP"
  timeout: 5000  # Таймаут запросов в миллисекундах
  fragmentSize: 1400  # Максимальный размер пакета

kdcproxy.mit:
  enabled: true
  defaultRealm: "EXAMPLE.COM"

logging:
  level:
    root: INFO
    com.example.kdcproxy: DEBUG
