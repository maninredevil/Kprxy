import java.util.Arrays;

public class ASN1Parser {

    public static void main(String[] args) {
        String hexString = "3081e0a081c70481c4000000c06a81bd3081baa103020105a20302010aa31a3018300aa10402020096a2020400300aa10402020095a2020400a4819130818ea00703050040010010a1133011a003020101a10a30081b066c79616e6f76a2141b12455352542e434c4f55442e534252462e5255a3273025a003020102a11e301c1b066b72627467741b12455352542e434c4f55442e534252462e5255a511180f32303235303232323036323830385aa7060204346edc96a814301202011402011302011202011102011a020119a1141b12455352542e434c4f55442e534252462e5255";
        
        byte[] data = hexStringToByteArray(hexString);
        
        // Печать байтов в читаемом виде для отладки
        System.out.println("Data: " + Arrays.toString(data));
        
        // Парсим сообщение
        parseASN1Sequence(data);
    }

    public static byte[] hexStringToByteArray(String hexString) {
        int len = hexString.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(hexString.charAt(i), 16) << 4)
                                 + Character.digit(hexString.charAt(i + 1), 16));
        }
        return data;
    }

    // Простая функция для парсинга SEQUENCE и извлечения типа запроса и принципала
    public static void parseASN1Sequence(byte[] data) {
        int index = 0;

        // Первые байты - это Tag и длина
        byte tag = data[index++];
        int length = data[index++] & 0xFF; // Используем беззнаковое представление длины
        
        System.out.println("Tag: " + Integer.toHexString(tag));
        System.out.println("Length: " + length);
        
        // Проверяем, что это SEQUENCE
        if ((tag & 0x1F) == 0x10) { // SEQUENCE
            System.out.println("Parsing SEQUENCE...");
            byte[] sequenceData = Arrays.copyOfRange(data, index, index + length);
            System.out.println("Sequence Data: " + Arrays.toString(sequenceData));

            // Разбор содержимого SEQUENCE
            parseMessageTypeAndPrincipal(sequenceData);
        }
    }

    // Парсим тип сообщения и принципала
    public static void parseMessageTypeAndPrincipal(byte[] sequenceData) {
        int index = 0;

        // Предположим, что тип сообщения (messageType) находится в начале
        byte messageTypeTag = sequenceData[index++];
        int messageTypeLength = sequenceData[index++] & 0xFF; // Длина типа сообщения

        byte[] messageType = Arrays.copyOfRange(sequenceData, index, index + messageTypeLength);
        index += messageTypeLength;

        System.out.println("Message Type: " + new String(messageType));

        // Принципал может быть следующим элементом (предположим, что это DN)
        byte principalTag = sequenceData[index++];
        int principalLength = sequenceData[index++] & 0xFF;

        byte[] principal = Arrays.copyOfRange(sequenceData, index, index + principalLength);

        System.out.println("Principal: " + new String(principal));
    }
}
